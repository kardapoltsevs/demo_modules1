version: "3.9"

services:

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network

  user-service:
    build:
      context: ./user
      dockerfile: Dockerfile
    container_name: user-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/userdb
      CONFL_URL: http://confl-service:8082
      JWT_URL: http://jwt-service:8083
    ports:
      - "8081:8081"   # снаружи localhost:8081 → внутри порт 8081
    depends_on:
      - postgres
      - confl-service
      - jwt-service
# TODO: починить хелсчеки
#    depends_on:
#      postgres:
#        condition: service_healthy
#      confl-service:
#        condition: service_healthy
#      jwt-service:
#        condition: service_healthy
    networks:
      - app-network

  confl-service:
    build:
      context: ./confl
      dockerfile: Dockerfile
    container_name: confl-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/confldb
      JWT_SECRET: my-super-super-long-secret-key-that-is-at-least-32-bytes
    ports:
      - "8082:8082"   # снаружи localhost:8082 → внутри порт 8082
    depends_on:
      - postgres
      - jwt-service

    networks:
      - app-network

  jwt-service:
    build:
      context: ./jwt
      dockerfile: Dockerfile
    container_name: jwt-service
    environment:
      JWT_EXPIRATION: 60000   # 1 минута
      JWT_SECRET: my-super-super-long-secret-key-that-is-at-least-32-bytes
    ports:
      - "8083:8083"   # снаружи localhost:8083 → внутри порт 8080

    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
